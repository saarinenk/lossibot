AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM template for lossibot Telegram bot

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        STAGE: prod

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'POST'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"

  WebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist
      Handler: handler.webhook
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: /lossibot/prod/token
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
      Events:
        WebhookPost:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /webhook
            Method: post

  SetWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist
      Handler: handler.setWebhook
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: /lossibot/prod/token
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
      Events:
        SetWebhookPost:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /setWebhook
            Method: post

Outputs:
  WebhookEndpoint:
    Description: Webhook endpoint URL for Telegram bot
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/webhook"
  SetWebhookEndpoint:
    Description: SetWebhook endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/setWebhook"